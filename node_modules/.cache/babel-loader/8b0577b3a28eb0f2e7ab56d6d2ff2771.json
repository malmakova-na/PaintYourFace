{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transformer = void 0;\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Node_1 = require(\"../Node\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Rect_1 = require(\"./Rect\");\n\nvar Group_1 = require(\"../Group\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Validators_1 = require(\"../Validators\");\n\nvar Global_2 = require(\"../Global\");\n\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange'].map(function (e) {\n  return e + (\".\" + EVENTS_NAME);\n}).join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'].map(function (e) {\n  return e + (\".\" + EVENTS_NAME);\n}).join(' ');\nvar ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nvar TOUCH_DEVICE = ('ontouchstart' in Global_1.Konva._global);\n\nfunction getCursor(anchorName, rad) {\n  if (anchorName === 'rotater') {\n    return 'crosshair';\n  }\n\n  rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n  var angle = (Util_1.Util._radToDeg(rad) % 360 + 360) % 360;\n\n  if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\n\nvar ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nvar MAX_SAFE_INTEGER = 100000000;\n\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\n\nfunction rotateAroundPoint(shape, angleRad, point) {\n  var x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  var y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return __assign(__assign({}, shape), {\n    rotation: shape.rotation + angleRad,\n    x: x,\n    y: y\n  });\n}\n\nfunction rotateAroundCenter(shape, deltaRad) {\n  var center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\n\nfunction getSnap(snaps, newRotationRad, tol) {\n  var snapped = newRotationRad;\n\n  for (var i = 0; i < snaps.length; i++) {\n    var angle = Global_1.Konva.getAngle(snaps[i]);\n    var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n\n  return snapped;\n}\n\nvar Transformer = function (_super) {\n  __extends(Transformer, _super);\n\n  function Transformer(config) {\n    var _this = _super.call(this, config) || this;\n\n    _this._transforming = false;\n\n    _this._createElements();\n\n    _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n    _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n    _this.update = _this.update.bind(_this);\n\n    _this.on(ATTR_CHANGE_LIST, _this.update);\n\n    if (_this.getNode()) {\n      _this.update();\n    }\n\n    return _this;\n  }\n\n  Transformer.prototype.attachTo = function (node) {\n    this.setNode(node);\n    return this;\n  };\n\n  Transformer.prototype.setNode = function (node) {\n    Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n    return this.setNodes([node]);\n  };\n\n  Transformer.prototype.getNode = function () {\n    return this._nodes && this._nodes[0];\n  };\n\n  Transformer.prototype.setNodes = function (nodes) {\n    var _this = this;\n\n    if (nodes === void 0) {\n      nodes = [];\n    }\n\n    if (this._nodes && this._nodes.length) {\n      this.detach();\n    }\n\n    this._nodes = nodes;\n\n    if (nodes.length === 1) {\n      this.rotation(nodes[0].getAbsoluteRotation());\n    } else {\n      this.rotation(0);\n    }\n\n    this._nodes.forEach(function (node) {\n      var additionalEvents = node._attrsAffectingSize.map(function (prop) {\n        return prop + 'Change.' + EVENTS_NAME;\n      }).join(' ');\n\n      var onChange = function () {\n        if (_this.nodes().length === 1) {\n          _this.rotation(_this.nodes()[0].getAbsoluteRotation());\n        }\n\n        _this._resetTransformCache();\n\n        if (!_this._transforming && !_this.isDragging()) {\n          _this.update();\n        }\n      };\n\n      node.on(additionalEvents, onChange);\n      node.on(TRANSFORM_CHANGE_STR, onChange);\n      node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n      node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n\n      _this._proxyDrag(node);\n    });\n\n    this._resetTransformCache();\n\n    var elementsCreated = !!this.findOne('.top-left');\n\n    if (elementsCreated) {\n      this.update();\n    }\n\n    return this;\n  };\n\n  Transformer.prototype._proxyDrag = function (node) {\n    var _this = this;\n\n    var lastPos;\n    node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n      lastPos = node.getAbsolutePosition();\n\n      if (!_this.isDragging() && node !== _this.findOne('.back')) {\n        _this.startDrag(e, false);\n      }\n    });\n    node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n      if (!lastPos) {\n        return;\n      }\n\n      var abs = node.getAbsolutePosition();\n      var dx = abs.x - lastPos.x;\n      var dy = abs.y - lastPos.y;\n\n      _this.nodes().forEach(function (otherNode) {\n        if (otherNode === node) {\n          return;\n        }\n\n        if (otherNode.isDragging()) {\n          return;\n        }\n\n        var otherAbs = otherNode.getAbsolutePosition();\n        otherNode.setAbsolutePosition({\n          x: otherAbs.x + dx,\n          y: otherAbs.y + dy\n        });\n        otherNode.startDrag(e);\n      });\n\n      lastPos = null;\n    });\n  };\n\n  Transformer.prototype.getNodes = function () {\n    return this._nodes || [];\n  };\n\n  Transformer.prototype.getActiveAnchor = function () {\n    return this._movingAnchorName;\n  };\n\n  Transformer.prototype.detach = function () {\n    if (this._nodes) {\n      this._nodes.forEach(function (node) {\n        node.off('.' + EVENTS_NAME);\n      });\n    }\n\n    this._nodes = [];\n\n    this._resetTransformCache();\n  };\n\n  Transformer.prototype._resetTransformCache = function () {\n    this._clearCache(NODES_RECT);\n\n    this._clearCache('transform');\n\n    this._clearSelfAndDescendantCache('absoluteTransform');\n  };\n\n  Transformer.prototype._getNodeRect = function () {\n    return this._getCache(NODES_RECT, this.__getNodeRect);\n  };\n\n  Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n    if (rot === void 0) {\n      rot = this.rotation();\n    }\n\n    var rect = node.getClientRect({\n      skipTransform: true,\n      skipShadow: true,\n      skipStroke: this.ignoreStroke()\n    });\n    var absScale = node.getAbsoluteScale(relative);\n    var absPos = node.getAbsolutePosition(relative);\n    var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n    var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n    var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n    var box = {\n      x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n      y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n      width: rect.width * absScale.x,\n      height: rect.height * absScale.y,\n      rotation: rotation\n    };\n    return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n      x: 0,\n      y: 0\n    });\n  };\n\n  Transformer.prototype.__getNodeRect = function () {\n    var _this = this;\n\n    var node = this.getNode();\n\n    if (!node) {\n      return {\n        x: -MAX_SAFE_INTEGER,\n        y: -MAX_SAFE_INTEGER,\n        width: 0,\n        height: 0,\n        rotation: 0\n      };\n    }\n\n    var totalPoints = [];\n    this.nodes().map(function (node) {\n      var box = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: _this.ignoreStroke()\n      });\n      var points = [{\n        x: box.x,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }, {\n        x: box.x,\n        y: box.y + box.height\n      }];\n      var trans = node.getAbsoluteTransform();\n      points.forEach(function (point) {\n        var transformed = trans.point(point);\n        totalPoints.push(transformed);\n      });\n    });\n    var tr = new Util_1.Transform();\n    tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n    var minX, minY, maxX, maxY;\n    totalPoints.forEach(function (point) {\n      var transformed = tr.point(point);\n\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    tr.invert();\n    var p = tr.point({\n      x: minX,\n      y: minY\n    });\n    return {\n      x: p.x,\n      y: p.y,\n      width: maxX - minX,\n      height: maxY - minY,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    };\n  };\n\n  Transformer.prototype.getX = function () {\n    return this._getNodeRect().x;\n  };\n\n  Transformer.prototype.getY = function () {\n    return this._getNodeRect().y;\n  };\n\n  Transformer.prototype.getWidth = function () {\n    return this._getNodeRect().width;\n  };\n\n  Transformer.prototype.getHeight = function () {\n    return this._getNodeRect().height;\n  };\n\n  Transformer.prototype._createElements = function () {\n    this._createBack();\n\n    ANCHORS_NAMES.forEach(function (name) {\n      this._createAnchor(name);\n    }.bind(this));\n\n    this._createAnchor('rotater');\n  };\n\n  Transformer.prototype._createAnchor = function (name) {\n    var _this = this;\n\n    var anchor = new Rect_1.Rect({\n      stroke: 'rgb(0, 161, 255)',\n      fill: 'white',\n      strokeWidth: 1,\n      name: name + ' _anchor',\n      dragDistance: 0,\n      draggable: true,\n      hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n    });\n    var self = this;\n    anchor.on('mousedown touchstart', function (e) {\n      self._handleMouseDown(e);\n    });\n    anchor.on('dragstart', function (e) {\n      anchor.stopDrag();\n      e.cancelBubble = true;\n    });\n    anchor.on('dragend', function (e) {\n      e.cancelBubble = true;\n    });\n    anchor.on('mouseenter', function () {\n      var rad = Global_1.Konva.getAngle(_this.rotation());\n      var cursor = getCursor(name, rad);\n      anchor.getStage().content.style.cursor = cursor;\n      _this._cursorChange = true;\n    });\n    anchor.on('mouseout', function () {\n      anchor.getStage().content.style.cursor = '';\n      _this._cursorChange = false;\n    });\n    this.add(anchor);\n  };\n\n  Transformer.prototype._createBack = function () {\n    var _this = this;\n\n    var back = new Shape_1.Shape({\n      name: 'back',\n      width: 0,\n      height: 0,\n      draggable: true,\n      sceneFunc: function (ctx) {\n        var tr = this.getParent();\n        var padding = tr.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n        ctx.moveTo(this.width() / 2, -padding);\n\n        if (tr.rotateEnabled()) {\n          ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n        }\n\n        ctx.fillStrokeShape(this);\n      },\n      hitFunc: function (ctx, shape) {\n        if (!_this.shouldOverdrawWholeArea()) {\n          return;\n        }\n\n        var padding = _this.padding();\n\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.fillStrokeShape(shape);\n      }\n    });\n    this.add(back);\n\n    this._proxyDrag(back);\n\n    back.on('dragstart', function (e) {\n      e.cancelBubble = true;\n    });\n    back.on('dragmove', function (e) {\n      e.cancelBubble = true;\n    });\n    back.on('dragend', function (e) {\n      e.cancelBubble = true;\n    });\n  };\n\n  Transformer.prototype._handleMouseDown = function (e) {\n    this._movingAnchorName = e.target.name().split(' ')[0];\n\n    var attrs = this._getNodeRect();\n\n    var width = attrs.width;\n    var height = attrs.height;\n    var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.sin = Math.abs(height / hypotenuse);\n    this.cos = Math.abs(width / hypotenuse);\n    window.addEventListener('mousemove', this._handleMouseMove);\n    window.addEventListener('touchmove', this._handleMouseMove);\n    window.addEventListener('mouseup', this._handleMouseUp, true);\n    window.addEventListener('touchend', this._handleMouseUp, true);\n    this._transforming = true;\n    var ap = e.target.getAbsolutePosition();\n    var pos = e.target.getStage().getPointerPosition();\n    this._anchorDragOffset = {\n      x: pos.x - ap.x,\n      y: pos.y - ap.y\n    };\n\n    this._fire('transformstart', {\n      evt: e,\n      target: this.getNode()\n    });\n\n    this._nodes.forEach(function (target) {\n      target._fire('transformstart', {\n        evt: e,\n        target: target\n      });\n    });\n  };\n\n  Transformer.prototype._handleMouseMove = function (e) {\n    var x, y, newHypotenuse;\n    var anchorNode = this.findOne('.' + this._movingAnchorName);\n    var stage = anchorNode.getStage();\n    stage.setPointersPositions(e);\n    var pp = stage.getPointerPosition();\n    var newNodePos = {\n      x: pp.x - this._anchorDragOffset.x,\n      y: pp.y - this._anchorDragOffset.y\n    };\n    var oldAbs = anchorNode.getAbsolutePosition();\n    anchorNode.setAbsolutePosition(newNodePos);\n    var newAbs = anchorNode.getAbsolutePosition();\n\n    if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n      return;\n    }\n\n    if (this._movingAnchorName === 'rotater') {\n      var attrs = this._getNodeRect();\n\n      x = anchorNode.x() - attrs.width / 2;\n      y = -anchorNode.y() + attrs.height / 2;\n      var delta = Math.atan2(-y, x) + Math.PI / 2;\n\n      if (attrs.height < 0) {\n        delta -= Math.PI;\n      }\n\n      var oldRotation = Global_1.Konva.getAngle(this.rotation());\n      var newRotation = oldRotation + delta;\n      var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n      var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n      var diff = snappedRot - attrs.rotation;\n      var shape = rotateAroundCenter(attrs, diff);\n\n      this._fitNodesInto(shape, e);\n\n      return;\n    }\n\n    var keepProportion = this.keepRatio() || e.shiftKey;\n    var centeredScaling = this.centeredScaling() || e.altKey;\n\n    if (this._movingAnchorName === 'top-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-right').x(),\n          y: this.findOne('.bottom-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-left').x(comparePoint.x - x);\n        this.findOne('.top-left').y(comparePoint.y - y);\n      }\n    } else if (this._movingAnchorName === 'top-center') {\n      this.findOne('.top-left').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'top-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-left').x(),\n          y: this.findOne('.bottom-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-right').x(comparePoint.x + x);\n        this.findOne('.top-right').y(comparePoint.y - y);\n      }\n\n      var pos = anchorNode.position();\n      this.findOne('.top-left').y(pos.y);\n      this.findOne('.bottom-right').x(pos.x);\n    } else if (this._movingAnchorName === 'middle-left') {\n      this.findOne('.top-left').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'middle-right') {\n      this.findOne('.bottom-right').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'bottom-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-right').x(),\n          y: this.findOne('.top-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n        var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        anchorNode.x(comparePoint.x - x);\n        anchorNode.y(comparePoint.y + y);\n      }\n\n      pos = anchorNode.position();\n      this.findOne('.top-left').x(pos.x);\n      this.findOne('.bottom-right').y(pos.y);\n    } else if (this._movingAnchorName === 'bottom-center') {\n      this.findOne('.bottom-right').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'bottom-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-left').x(),\n          y: this.findOne('.top-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.bottom-right').x(comparePoint.x + x);\n        this.findOne('.bottom-right').y(comparePoint.y + y);\n      }\n    } else {\n      console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n    }\n\n    var centeredScaling = this.centeredScaling() || e.altKey;\n\n    if (centeredScaling) {\n      var topLeft = this.findOne('.top-left');\n      var bottomRight = this.findOne('.bottom-right');\n      var topOffsetX = topLeft.x();\n      var topOffsetY = topLeft.y();\n      var bottomOffsetX = this.getWidth() - bottomRight.x();\n      var bottomOffsetY = this.getHeight() - bottomRight.y();\n      bottomRight.move({\n        x: -topOffsetX,\n        y: -topOffsetY\n      });\n      topLeft.move({\n        x: bottomOffsetX,\n        y: bottomOffsetY\n      });\n    }\n\n    var absPos = this.findOne('.top-left').getAbsolutePosition();\n    x = absPos.x;\n    y = absPos.y;\n    var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n    var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n\n    this._fitNodesInto({\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    }, e);\n  };\n\n  Transformer.prototype._handleMouseUp = function (e) {\n    this._removeEvents(e);\n  };\n\n  Transformer.prototype.getAbsoluteTransform = function () {\n    return this.getTransform();\n  };\n\n  Transformer.prototype._removeEvents = function (e) {\n    if (this._transforming) {\n      this._transforming = false;\n      window.removeEventListener('mousemove', this._handleMouseMove);\n      window.removeEventListener('touchmove', this._handleMouseMove);\n      window.removeEventListener('mouseup', this._handleMouseUp, true);\n      window.removeEventListener('touchend', this._handleMouseUp, true);\n      var node = this.getNode();\n\n      this._fire('transformend', {\n        evt: e,\n        target: node\n      });\n\n      if (node) {\n        this._nodes.forEach(function (target) {\n          target._fire('transformend', {\n            evt: e,\n            target: target\n          });\n        });\n      }\n\n      this._movingAnchorName = null;\n    }\n  };\n\n  Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n    var _this = this;\n\n    var oldAttrs = this._getNodeRect();\n\n    var minSize = 1;\n\n    if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n\n    if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n\n    var allowNegativeScale = true;\n    var t = new Util_1.Transform();\n    t.rotate(Global_1.Konva.getAngle(this.rotation()));\n\n    if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n      var offset = t.point({\n        x: -this.padding() * 2,\n        y: 0\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      newAttrs.width += this.padding() * 2;\n      this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n      var offset = t.point({\n        x: this.padding() * 2,\n        y: 0\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.width += this.padding() * 2;\n\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    }\n\n    if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n      var offset = t.point({\n        x: 0,\n        y: -this.padding() * 2\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n      var offset = t.point({\n        x: 0,\n        y: this.padding() * 2\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    }\n\n    if (this.boundBoxFunc()) {\n      var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n\n      if (bounded) {\n        newAttrs = bounded;\n      } else {\n        Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n      }\n    }\n\n    var baseSize = 10000000;\n    var oldTr = new Util_1.Transform();\n    oldTr.translate(oldAttrs.x, oldAttrs.y);\n    oldTr.rotate(oldAttrs.rotation);\n    oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n    var newTr = new Util_1.Transform();\n    newTr.translate(newAttrs.x, newAttrs.y);\n    newTr.rotate(newAttrs.rotation);\n    newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n    var delta = newTr.multiply(oldTr.invert());\n\n    this._nodes.forEach(function (node) {\n      var _a;\n\n      var parentTransform = node.getParent().getAbsoluteTransform();\n      var localTransform = node.getTransform().copy();\n      localTransform.translate(node.offsetX(), node.offsetY());\n      var newLocalTransform = new Util_1.Transform();\n      newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n      var attrs = newLocalTransform.decompose();\n      node.setAttrs(attrs);\n\n      _this._fire('transform', {\n        evt: evt,\n        target: node\n      });\n\n      node._fire('transform', {\n        evt: evt,\n        target: node\n      });\n\n      (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    });\n\n    this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n\n    this._resetTransformCache();\n\n    this.update();\n    this.getLayer().batchDraw();\n  };\n\n  Transformer.prototype.forceUpdate = function () {\n    this._resetTransformCache();\n\n    this.update();\n  };\n\n  Transformer.prototype._batchChangeChild = function (selector, attrs) {\n    var anchor = this.findOne(selector);\n    anchor.setAttrs(attrs);\n  };\n\n  Transformer.prototype.update = function () {\n    var _this = this;\n\n    var _a;\n\n    var attrs = this._getNodeRect();\n\n    this.rotation(Util_1.Util._getRotation(attrs.rotation));\n    var width = attrs.width;\n    var height = attrs.height;\n    var enabledAnchors = this.enabledAnchors();\n    var resizeEnabled = this.resizeEnabled();\n    var padding = this.padding();\n    var anchorSize = this.anchorSize();\n    this.find('._anchor').each(function (node) {\n      node.setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: _this.anchorStroke(),\n        strokeWidth: _this.anchorStrokeWidth(),\n        fill: _this.anchorFill(),\n        cornerRadius: _this.anchorCornerRadius()\n      });\n    });\n\n    this._batchChangeChild('.top-left', {\n      x: 0,\n      y: 0,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n    });\n\n    this._batchChangeChild('.top-center', {\n      x: width / 2,\n      y: 0,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n    });\n\n    this._batchChangeChild('.top-right', {\n      x: width,\n      y: 0,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n    });\n\n    this._batchChangeChild('.middle-left', {\n      x: 0,\n      y: height / 2,\n      offsetX: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n    });\n\n    this._batchChangeChild('.middle-right', {\n      x: width,\n      y: height / 2,\n      offsetX: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n    });\n\n    this._batchChangeChild('.bottom-left', {\n      x: 0,\n      y: height,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n    });\n\n    this._batchChangeChild('.bottom-center', {\n      x: width / 2,\n      y: height,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n    });\n\n    this._batchChangeChild('.bottom-right', {\n      x: width,\n      y: height,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n    });\n\n    this._batchChangeChild('.rotater', {\n      x: width / 2,\n      y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n      visible: this.rotateEnabled()\n    });\n\n    this._batchChangeChild('.back', {\n      width: width,\n      height: height,\n      visible: this.borderEnabled(),\n      stroke: this.borderStroke(),\n      strokeWidth: this.borderStrokeWidth(),\n      dash: this.borderDash(),\n      x: 0,\n      y: 0\n    });\n\n    (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n  };\n\n  Transformer.prototype.isTransforming = function () {\n    return this._transforming;\n  };\n\n  Transformer.prototype.stopTransform = function () {\n    if (this._transforming) {\n      this._removeEvents();\n\n      var anchorNode = this.findOne('.' + this._movingAnchorName);\n\n      if (anchorNode) {\n        anchorNode.stopDrag();\n      }\n    }\n  };\n\n  Transformer.prototype.destroy = function () {\n    if (this.getStage() && this._cursorChange) {\n      this.getStage().content.style.cursor = '';\n    }\n\n    Group_1.Group.prototype.destroy.call(this);\n    this.detach();\n\n    this._removeEvents();\n\n    return this;\n  };\n\n  Transformer.prototype.toObject = function () {\n    return Node_1.Node.prototype.toObject.call(this);\n  };\n\n  return Transformer;\n}(Group_1.Group);\n\nexports.Transformer = Transformer;\n\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util_1.Util.warn('enabledAnchors value should be an array');\n  }\n\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util_1.Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n\n  return val || [];\n}\n\nTransformer.prototype.className = 'Transformer';\n\nGlobal_2._registerNode(Transformer);\n\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});\nUtil_1.Collection.mapMethods(Transformer);","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/node_modules/konva/lib/shapes/Transformer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","Transformer","Util_1","require","Factory_1","Node_1","Shape_1","Rect_1","Group_1","Global_1","Validators_1","Global_2","EVENTS_NAME","ATTR_CHANGE_LIST","map","e","join","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","Konva","_global","getCursor","anchorName","rad","Util","_degToRad","angle","_radToDeg","_inRange","error","ANCHORS_NAMES","MAX_SAFE_INTEGER","getCenter","shape","x","width","Math","cos","rotation","height","sin","y","rotateAroundPoint","angleRad","point","rotateAroundCenter","deltaRad","center","getSnap","snaps","newRotationRad","tol","snapped","getAngle","absDiff","abs","PI","dif","min","_super","config","_this","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","on","getNode","attachTo","node","setNode","warn","setNodes","_nodes","nodes","detach","getAbsoluteRotation","forEach","additionalEvents","_attrsAffectingSize","prop","onChange","_resetTransformCache","isDragging","_proxyDrag","elementsCreated","findOne","lastPos","getAbsolutePosition","startDrag","dx","dy","otherNode","otherAbs","setAbsolutePosition","getNodes","getActiveAnchor","_movingAnchorName","off","_clearCache","_clearSelfAndDescendantCache","_getNodeRect","_getCache","__getNodeRect","__getNodeShape","rot","relative","rect","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","box","totalPoints","points","trans","getAbsoluteTransform","transformed","push","tr","Transform","rotate","minX","minY","maxX","maxY","undefined","max","invert","getX","getY","getWidth","getHeight","_createBack","name","_createAnchor","anchor","Rect","stroke","fill","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","cursor","getStage","content","style","_cursorChange","add","back","Shape","sceneFunc","ctx","getParent","padding","beginPath","moveTo","rotateEnabled","lineTo","rotateAnchorOffset","_sign","fillStrokeShape","hitFunc","shouldOverdrawWholeArea","target","split","attrs","hypotenuse","sqrt","pow","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","evt","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","newAbs","delta","atan2","oldRotation","newRotation","rotationSnapTolerance","snappedRot","rotationSnaps","diff","_fitNodesInto","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","Error","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","move","_removeEvents","getTransform","removeEventListener","newAttrs","oldAttrs","minSize","allowNegativeScale","indexOf","offset","replace","boundBoxFunc","bounded","baseSize","oldTr","translate","scale","newTr","multiply","_a","parentTransform","localTransform","copy","newLocalTransform","decompose","setAttrs","getLayer","batchDraw","_getRotation","forceUpdate","_batchChangeChild","selector","enabledAnchors","resizeEnabled","anchorSize","find","each","anchorStroke","anchorStrokeWidth","anchorFill","cornerRadius","anchorCornerRadius","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","isTransforming","stopTransform","destroy","Group","toObject","Node","validateAnchors","val","className","_registerNode","Factory","addGetterSetter","getNumberValidator","backCompat","lineEnabled","rotateHandlerOffset","enabledHandlers","Collection","mapMethods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transformer = void 0;\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nvar TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    var x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    var y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return __assign(__assign({}, shape), { rotation: shape.rotation + angleRad, x: x,\n        y: y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    var center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    var snapped = newRotationRad;\n    for (var i = 0; i < snaps.length; i++) {\n        var angle = Global_1.Konva.getAngle(snaps[i]);\n        var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nvar Transformer = (function (_super) {\n    __extends(Transformer, _super);\n    function Transformer(config) {\n        var _this = _super.call(this, config) || this;\n        _this._transforming = false;\n        _this._createElements();\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n        _this.update = _this.update.bind(_this);\n        _this.on(ATTR_CHANGE_LIST, _this.update);\n        if (_this.getNode()) {\n            _this.update();\n        }\n        return _this;\n    }\n    Transformer.prototype.attachTo = function (node) {\n        this.setNode(node);\n        return this;\n    };\n    Transformer.prototype.setNode = function (node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    };\n    Transformer.prototype.getNode = function () {\n        return this._nodes && this._nodes[0];\n    };\n    Transformer.prototype.setNodes = function (nodes) {\n        var _this = this;\n        if (nodes === void 0) { nodes = []; }\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach(function (node) {\n            var additionalEvents = node._attrsAffectingSize\n                .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\n                .join(' ');\n            var onChange = function () {\n                if (_this.nodes().length === 1) {\n                    _this.rotation(_this.nodes()[0].getAbsoluteRotation());\n                }\n                _this._resetTransformCache();\n                if (!_this._transforming && !_this.isDragging()) {\n                    _this.update();\n                }\n            };\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR, onChange);\n            node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n            node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n            _this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    };\n    Transformer.prototype._proxyDrag = function (node) {\n        var _this = this;\n        var lastPos;\n        node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n            lastPos = node.getAbsolutePosition();\n            if (!_this.isDragging() && node !== _this.findOne('.back')) {\n                _this.startDrag(e, false);\n            }\n        });\n        node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n            if (!lastPos) {\n                return;\n            }\n            var abs = node.getAbsolutePosition();\n            var dx = abs.x - lastPos.x;\n            var dy = abs.y - lastPos.y;\n            _this.nodes().forEach(function (otherNode) {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                var otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    };\n    Transformer.prototype.getNodes = function () {\n        return this._nodes || [];\n    };\n    Transformer.prototype.getActiveAnchor = function () {\n        return this._movingAnchorName;\n    };\n    Transformer.prototype.detach = function () {\n        if (this._nodes) {\n            this._nodes.forEach(function (node) {\n                node.off('.' + EVENTS_NAME);\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    };\n    Transformer.prototype._resetTransformCache = function () {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    };\n    Transformer.prototype._getNodeRect = function () {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    };\n    Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n        if (rot === void 0) { rot = this.rotation(); }\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        var box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.__getNodeRect = function () {\n        var _this = this;\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        var totalPoints = [];\n        this.nodes().map(function (node) {\n            var box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: _this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        var tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        var p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    };\n    Transformer.prototype.getX = function () {\n        return this._getNodeRect().x;\n    };\n    Transformer.prototype.getY = function () {\n        return this._getNodeRect().y;\n    };\n    Transformer.prototype.getWidth = function () {\n        return this._getNodeRect().width;\n    };\n    Transformer.prototype.getHeight = function () {\n        return this._getNodeRect().height;\n    };\n    Transformer.prototype._createElements = function () {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    };\n    Transformer.prototype._createAnchor = function (name) {\n        var _this = this;\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', function (e) {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', function () {\n            var rad = Global_1.Konva.getAngle(_this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content.style.cursor = cursor;\n            _this._cursorChange = true;\n        });\n        anchor.on('mouseout', function () {\n            anchor.getStage().content.style.cursor = '';\n            _this._cursorChange = false;\n        });\n        this.add(anchor);\n    };\n    Transformer.prototype._createBack = function () {\n        var _this = this;\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc: function (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: function (ctx, shape) {\n                if (!_this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = _this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', function (e) {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', function (e) {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n    };\n    Transformer.prototype._handleMouseDown = function (e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e, target: this.getNode() });\n        this._nodes.forEach(function (target) {\n            target._fire('transformstart', { evt: e, target: target });\n        });\n    };\n    Transformer.prototype._handleMouseMove = function (e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        var pp = stage.getPointerPosition();\n        var newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        var oldAbs = anchorNode.getAbsolutePosition();\n        anchorNode.setAbsolutePosition(newNodePos);\n        var newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            var delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            var newRotation = oldRotation + delta;\n            var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            var diff = snappedRot - attrs.rotation;\n            var shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    };\n    Transformer.prototype._handleMouseUp = function (e) {\n        this._removeEvents(e);\n    };\n    Transformer.prototype.getAbsoluteTransform = function () {\n        return this.getTransform();\n    };\n    Transformer.prototype._removeEvents = function (e) {\n        if (this._transforming) {\n            this._transforming = false;\n            window.removeEventListener('mousemove', this._handleMouseMove);\n            window.removeEventListener('touchmove', this._handleMouseMove);\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\n            window.removeEventListener('touchend', this._handleMouseUp, true);\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach(function (target) {\n                    target._fire('transformend', { evt: e, target: target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    };\n    Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n        var _this = this;\n        var oldAttrs = this._getNodeRect();\n        var minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        var allowNegativeScale = true;\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            var offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            var offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        var baseSize = 10000000;\n        var oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        var newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        var delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach(function (node) {\n            var _a;\n            var parentTransform = node.getParent().getAbsoluteTransform();\n            var localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            var newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            var attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            _this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    };\n    Transformer.prototype.forceUpdate = function () {\n        this._resetTransformCache();\n        this.update();\n    };\n    Transformer.prototype._batchChangeChild = function (selector, attrs) {\n        var anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    };\n    Transformer.prototype.update = function () {\n        var _this = this;\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').each(function (node) {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: _this.anchorStroke(),\n                strokeWidth: _this.anchorStrokeWidth(),\n                fill: _this.anchorFill(),\n                cornerRadius: _this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    };\n    Transformer.prototype.isTransforming = function () {\n        return this._transforming;\n    };\n    Transformer.prototype.stopTransform = function () {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    };\n    Transformer.prototype.destroy = function () {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content.style.cursor = '';\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    };\n    Transformer.prototype.toObject = function () {\n        return Node_1.Node.prototype.toObject.call(this);\n    };\n    return Transformer;\n}(Group_1.Group));\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\nUtil_1.Collection.mapMethods(Transformer);\n"]},"metadata":{},"sourceType":"script"}