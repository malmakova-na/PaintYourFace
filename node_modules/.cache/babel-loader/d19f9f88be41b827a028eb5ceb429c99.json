{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/FaceMash/camera.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport React, { useRef, useState } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport styles from './Camera.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addScript(url) {\n  const script = document.createElement('script');\n  script.src = url;\n  script.async = true;\n  document.body.appendChild(script);\n}\n\n;\n\nconst Camera = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  let model, w, h;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    const facemesh = require('@tensorflow-models/facemesh');\n    /*addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\");\n    addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter\")\n    addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow-models/facemesh\")\n    addScript(\"https://cdn.jsdelivr.net/npm/three@0.116.1/build/three.min.js\")*/\n\n\n    async function fetchCam() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      video.srcObject = stream;\n      await new Promise(function (res) {\n        video.onloadedmetadata = function () {\n          //w = video.videoWidth;\n          //h = video.videoHeight;\n          res();\n        };\n      });\n      model = await facemesh.load({\n        maxContinuousChecks: 5,\n        detectionConfidence: 0.9,\n        maxFaces: 1,\n        iouThreshold: 0.3,\n        scoreThreshold: 0.75\n      }); //video.height = h;\n      //video.width = w;\n    }\n\n    fetchCam();\n    video.play();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.camera,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      muted: true,\n      playsInline: true,\n      className: styles.webcam,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: styles.faceCanvas,\n      tabIndex: \"1\",\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Camera, \"yDZRt0qVdA+8KL1NIY7I2UpyRts=\");\n\n_c = Camera;\nexport default Camera; //<div className={styles.background}/>\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/FaceMash/camera.js"],"names":["useEffect","React","useRef","useState","tf","facemesh","styles","addScript","url","script","document","createElement","src","async","body","appendChild","Camera","props","canvasRef","videoRef","model","w","h","canvas","current","video","require","fetchCam","stream","navigator","mediaDevices","getUserMedia","audio","srcObject","Promise","res","onloadedmetadata","load","maxContinuousChecks","detectionConfidence","maxFaces","iouThreshold","scoreThreshold","play","camera","webcam","faceCanvas"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,6BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,SAAT,CAAoBC,GAApB,EAAyB;AAEjB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AAEAF,EAAAA,MAAM,CAACG,GAAP,GAAaJ,GAAb;AACAC,EAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAH,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,MAA1B;AAEP;;AAAA;;AACD,MAAMO,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAMC,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMiB,QAAQ,GAAGjB,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIkB,KAAJ,EAAWC,CAAX,EAAcC,CAAd;AAIAtB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMuB,MAAM,GAAGL,SAAS,CAACM,OAAzB;AACA,UAAMC,KAAK,GAAGN,QAAQ,CAACK,OAAvB;;AACA,UAAMnB,QAAQ,GAAGqB,OAAO,CAAC,6BAAD,CAAxB;AACA;AACR;AACA;AACA;;;AACQ,mBAAeC,QAAf,GAA2B;AAEvB,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACjEN,QAAAA,KAAK,EAAE,IAD0D;AAEjEO,QAAAA,KAAK,EAAE;AAF0D,OAApC,CAArB;AAIAP,MAAAA,KAAK,CAACQ,SAAN,GAAkBL,MAAlB;AACA,YAAM,IAAIM,OAAJ,CAAY,UAAUC,GAAV,EAAe;AACzCV,QAAAA,KAAK,CAACW,gBAAN,GAAyB,YAAY;AACpC;AACA;AACAD,UAAAA,GAAG;AACH,SAJD;AAKA,OANc,CAAN;AAOAf,MAAAA,KAAK,GAAG,MAAMf,QAAQ,CAACgC,IAAT,CAAc;AACxBC,QAAAA,mBAAmB,EAAE,CADG;AAExBC,QAAAA,mBAAmB,EAAE,GAFG;AAGxBC,QAAAA,QAAQ,EAAE,CAHc;AAIxBC,QAAAA,YAAY,EAAE,GAJU;AAKxBC,QAAAA,cAAc,EAAE;AALQ,OAAd,CAAd,CAduB,CAuBhC;AACA;AACM;;AACDf,IAAAA,QAAQ;AACRF,IAAAA,KAAK,CAACkB,IAAN;AAGH,GAtCQ,EAsCN,EAtCM,CAAT;AAuCA,sBAAO;AAAK,IAAA,SAAS,EAAErC,MAAM,CAACsC,MAAvB;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAO,MAAA,GAAG,EAAEzB,QAAZ;AAAsB,MAAA,KAAK,EAAE,IAA7B;AAAmC,MAAA,WAAW,EAAE,IAAhD;AAAuD,MAAA,SAAS,EAAEb,MAAM,CAACuC,MAAzE;AAAiF,MAAA,QAAQ,EAAE;AAA3F;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,SAAS,EAAEvC,MAAM,CAACwC,UAA1B;AAAsC,MAAA,QAAQ,EAAC,GAA/C;AAAoD,MAAA,GAAG,EAAE5B,SAAzD;AAAA,SAAwED;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAnDD;;GAAMD,M;;KAAAA,M;AAoDN,eAAeA,MAAf,C,CACA","sourcesContent":["import { useEffect } from \"react\";\nimport React, { useRef, useState } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\n\nimport styles from './Camera.module.css';\n\nfunction addScript( url) {\n   \n        const script = document.createElement('script');\n\n        script.src = url;\n        script.async = true;\n        document.body.appendChild(script);\n   \n}; \nconst Camera = props => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    let model, w, h;\n    \n    \n\n    useEffect(()=>{\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n        const facemesh = require('@tensorflow-models/facemesh');\n        /*addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\");\n        addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter\")\n        addScript(\"https://cdn.jsdelivr.net/npm/@tensorflow-models/facemesh\")\n        addScript(\"https://cdn.jsdelivr.net/npm/three@0.116.1/build/three.min.js\")*/\n        async function fetchCam () {\n            \n            const stream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\tvideo: true,\n\t\t\t\taudio: false\n\t\t\t});\n            video.srcObject = stream;\n            await new Promise(function (res) {\n\t\t\t\tvideo.onloadedmetadata = function () {\n\t\t\t\t\t//w = video.videoWidth;\n\t\t\t\t\t//h = video.videoHeight;\n\t\t\t\t\tres();\n\t\t\t\t}\n\t\t\t});\n            model = await facemesh.load({\n                maxContinuousChecks: 5,\n                detectionConfidence: 0.9,\n                maxFaces: 1,\n                iouThreshold: 0.3,\n                scoreThreshold: 0.75\n            });\n            \n\n\t\t\t//video.height = h;\n\t\t\t//video.width = w;\n        }\n        fetchCam()\n        video.play();\n        \n\n    }, []);\n    return <div className={styles.camera}>\n        <div>Camera</div>\n        <video ref={videoRef} muted={true} playsInline={true}  className={styles.webcam} autoPlay={true} ></video>\n        <canvas className={styles.faceCanvas} tabIndex=\"1\"  ref={canvasRef} {...props}></canvas>\n    </div>;\n};\nexport default Camera;\n//<div className={styles.background}/>"]},"metadata":{},"sourceType":"module"}