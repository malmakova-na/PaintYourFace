{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\n\nvar Global_1 = require(\"./Global\");\n\nvar Util_1 = require(\"./Util\");\n\nfunction _formatValue(val) {\n  if (Util_1.Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n\n  if (Util_1.Util._isBoolean(val)) {\n    return val;\n  }\n\n  return Object.prototype.toString.call(val);\n}\n\nfunction RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n\n  return Math.round(val);\n}\n\nexports.RGBComponent = RGBComponent;\n\nfunction alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n\n  return val;\n}\n\nexports.alphaComponent = alphaComponent;\n\nfunction getNumberValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isNumber(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberValidator = getNumberValidator;\n\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util_1.Util._isNumber(val);\n\n      var isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n\n      if (!isNumber && !isValidArray) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\n\nfunction getNumberOrAutoValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util_1.Util._isNumber(val);\n\n      var isAuto = val === 'auto';\n\n      if (!(isNumber || isAuto)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\n\nfunction getStringValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isString(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getStringValidator = getStringValidator;\n\nfunction getStringOrGradientValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isString = Util_1.Util._isString(val);\n\n      var isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]';\n\n      if (!(isString || isGradient)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\n\nfunction getFunctionValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isFunction(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getFunctionValidator = getFunctionValidator;\n\nfunction getNumberArrayValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isArray(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util_1.Util._isNumber(item)) {\n            Util_1.Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberArrayValidator = getNumberArrayValidator;\n\nfunction getBooleanValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isBool = val === true || val === false;\n\n      if (!isBool) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getBooleanValidator = getBooleanValidator;\n\nfunction getComponentValidator(components) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util.isObject(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getComponentValidator = getComponentValidator;","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/node_modules/konva/lib/Validators.js"],"names":["Object","defineProperty","exports","value","getComponentValidator","getBooleanValidator","getNumberArrayValidator","getFunctionValidator","getStringOrGradientValidator","getStringValidator","getNumberOrAutoValidator","getNumberOrArrayOfNumbersValidator","getNumberValidator","alphaComponent","RGBComponent","Global_1","require","Util_1","_formatValue","val","Util","_isString","prototype","toString","call","_isBoolean","Math","round","Konva","isUnminified","attr","_isNumber","warn","noOfElements","isNumber","isValidArray","_isArray","length","isAuto","isString","isGradient","_isFunction","forEach","item","isBool","components","isObject"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexports.RGBComponent = RGBComponent;\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexports.alphaComponent = alphaComponent;\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberValidator = getNumberValidator;\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_1.Util._isNumber(val);\n            var isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_1.Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringValidator = getStringValidator;\nfunction getStringOrGradientValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isString = Util_1.Util._isString(val);\n            var isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]';\n            if (!(isString || isGradient)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexports.getFunctionValidator = getFunctionValidator;\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberArrayValidator = getNumberArrayValidator;\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexports.getBooleanValidator = getBooleanValidator;\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\nexports.getComponentValidator = getComponentValidator;\n"]},"metadata":{},"sourceType":"script"}