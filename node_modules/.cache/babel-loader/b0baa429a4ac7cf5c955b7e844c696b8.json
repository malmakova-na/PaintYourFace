{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/graficEditor/GraficEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport Palette from '../Palette/Palette';\nimport Button from '../Buttons';\nimport LineWidthBar from '../LineWidthBar';\nimport GalleryItem from '../addNewImage';\nimport DeleteButton from '../DeleteButton';\nimport LoadImage from '../LoadImage'; //import FacePaint from '../FaceMash/FacePaint';\n\nimport { faceCanvas } from '../FaceMash/camera';\nimport face from '../images/face.png';\nimport styles from './gallery/Gallery.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"0ueM1jHopzWZoE4BJMANlTJutCE=\");\n\n;\n\nconst Canvas = props => {\n  _s2();\n\n  let [color, setColor] = useState('black');\n  let [gallery, setImage] = useLocalStorage('gallery', []);\n  let [paths, setPath] = useState([]);\n  let [lineWidth, setLineWidth] = useState(2);\n  let [toggleItem, setToggle] = useState([]);\n  const [isLoaded, setLoader] = useState(false);\n  const canvasRef = useRef(null);\n  const draw = useCallback((canvas, color, mode) => {\n    let rememberPath = false;\n    let points = [];\n    let context = canvas.getContext('2d');\n    context.globalCompositeOperation = mode === 'line' ? \"source-over\" : \"destination-out\";\n\n    canvas.onmousemove = function drawIfPressed(e) {\n      let x = e.offsetX;\n      let y = e.offsetY;\n      let dx = e.movementX;\n      let dy = e.movementY;\n      context.lineCap = \"round\";\n      context.lineWidth = lineWidth;\n\n      if (e.buttons > 0) {\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x - dx, y - dy);\n        context.stroke();\n        context.strokeStyle = color;\n        context.closePath();\n      }\n\n      if (rememberPath) {\n        points.push({\n          x: x - dx,\n          y: y - dy,\n          color: color,\n          lineWidth: lineWidth\n        });\n      }\n\n      canvas.onmouseup = e => {\n        //не нажата\n        setPath([...paths, points]);\n        rememberPath = false;\n      };\n\n      canvas.onmousedown = e => {\n        //нажата\n        let x = e.offsetX;\n        let y = e.offsetY;\n        let dx = e.movementX;\n        let dy = e.movementY;\n        points = [];\n        rememberPath = true;\n        points.push({\n          x: x - dx,\n          y: y - dy\n        });\n      };\n    };\n  }, [lineWidth, paths]);\n\n  const drawPaths = canvas => {\n    let context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    paths.forEach(path => {\n      context.beginPath();\n      context.moveTo(path[0].x, path[0].y);\n\n      for (let i = 1; i < path.length; i++) {\n        context.lineTo(path[i].x, path[i].y);\n        context.strokeStyle = path[i].color;\n        context.lineWidth = path[i].lineWidth;\n      }\n\n      context.stroke();\n    });\n  };\n\n  const onChangeLineWidth = width => setLineWidth(width);\n\n  const onChangeColor = color => setColor(color);\n\n  const save = () => {\n    const canvas = canvasRef.current;\n    let dataURL = canvas.toDataURL(\"image/png\", 1.0);\n\n    if (localStorage.getItem('gallery') === null || localStorage.getItem('gallery').includes(dataURL) !== true) {\n      //картинку сохраняем один раз\n      setImage([...gallery, dataURL]);\n    }\n  };\n\n  const clear = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setPath([]);\n  };\n\n  const eraser = () => {\n    const canvas = canvasRef.current;\n    draw(canvas, \"rgb(255, 255, 255, 1)\", 'eraser');\n  };\n\n  const undo = () => {\n    const canvas = canvasRef.current;\n    paths.splice(-1, 1);\n    drawPaths(canvas);\n  };\n\n  const toggleStyle = value => {\n    //alert(JSON.stringify( props))\n    setToggle(value);\n    faceCanvas.updateTexture(value);\n    /*if(faceCanvas!==undefined){\n        faceCanvas.updateTexture(value);\n    }\n    else{\n        alert('loading')\n    }*/\n  };\n\n  if (faceCanvas !== undefined) {\n    setLoader(true);\n  }\n\n  const addNewImg = dataURL => {\n    setImage([...gallery, dataURL]);\n  };\n\n  const onDelete = item => {\n    setImage(prevActions => prevActions.filter(value => value !== item));\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current; //alert(faceCanvas===undefined)\n\n    draw(canvas, color, 'line');\n  }, [isLoaded, draw, color, gallery, paths, lineWidth, toggleStyle]); //, lineWidth, toggleStyle  \n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.paintWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.galleryWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.gallery__heading,\n        children: \"Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gallery,\n        children: gallery.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.block,\n          children: [/*#__PURE__*/_jsxDEV(GalleryItem, {\n            src: item,\n            onClick: toggleStyle,\n            active: item === toggleItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n            id: item,\n            onClick: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LoadImage, {\n        addNewImg: addNewImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.canvasWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.canvas__heading,\n        children: \"Grafic Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.graficEditor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tools,\n          children: [/*#__PURE__*/_jsxDEV(LineWidthBar, {\n            onChangeLineWidth: onChangeLineWidth,\n            value: lineWidth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: eraser,\n            id: 'eraser',\n            text: 'eraser'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: clear,\n            id: 'clear',\n            text: 'clear'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: undo,\n            id: 'undo',\n            text: 'undo'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: save,\n            id: 'save',\n            text: 'save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: face,\n          alt: \"face\",\n          className: styles.facePattern\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          width: \"450\",\n          height: \"450\",\n          className: styles.painter,\n          ref: canvasRef,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Palette, {\n          onChangeColor: onChangeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.paintWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.galleryWrapper,\n      children: [\"Loading\", /*#__PURE__*/_jsxDEV(LoadImage, {\n        addNewImg: addNewImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.canvasWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.canvas__heading,\n        children: \"Grafic Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.graficEditor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tools,\n          children: [/*#__PURE__*/_jsxDEV(LineWidthBar, {\n            onChangeLineWidth: onChangeLineWidth,\n            value: lineWidth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: eraser,\n            id: 'eraser',\n            text: 'eraser'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: clear,\n            id: 'clear',\n            text: 'clear'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: undo,\n            id: 'undo',\n            text: 'undo'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: save,\n            id: 'save',\n            text: 'save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: face,\n          alt: \"face\",\n          className: styles.facePattern\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          width: \"450\",\n          height: \"450\",\n          className: styles.painter,\n          ref: canvasRef,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Palette, {\n          onChangeColor: onChangeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(Canvas, \"oNPj7hFm1PKJ/Kwe9Y5W5175J1w=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/graficEditor/GraficEditor.js"],"names":["React","useRef","useEffect","useState","useCallback","Palette","Button","LineWidthBar","GalleryItem","DeleteButton","LoadImage","faceCanvas","face","styles","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setValue","value","valueToStore","Function","setItem","stringify","Canvas","props","color","setColor","gallery","setImage","paths","setPath","lineWidth","setLineWidth","toggleItem","setToggle","isLoaded","setLoader","canvasRef","draw","canvas","mode","rememberPath","points","context","getContext","globalCompositeOperation","onmousemove","drawIfPressed","e","x","offsetX","y","offsetY","dx","movementX","dy","movementY","lineCap","buttons","beginPath","moveTo","lineTo","stroke","strokeStyle","closePath","push","onmouseup","onmousedown","drawPaths","clearRect","width","height","forEach","path","i","length","onChangeLineWidth","onChangeColor","save","current","dataURL","toDataURL","includes","clear","eraser","undo","splice","toggleStyle","updateTexture","undefined","addNewImg","onDelete","prevActions","filter","paintWrapper","galleryWrapper","gallery__heading","map","index","block","canvasWrapper","canvas__heading","graficEditor","tools","facePattern","painter"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport Palette from '../Palette/Palette';\nimport Button from '../Buttons';\nimport LineWidthBar from '../LineWidthBar';\nimport GalleryItem from '../addNewImage';\nimport DeleteButton from '../DeleteButton';\nimport LoadImage from '../LoadImage';\n//import FacePaint from '../FaceMash/FacePaint';\nimport {faceCanvas} from '../FaceMash/camera';\nimport face from '../images/face.png'\n\nimport styles from './gallery/Gallery.module.css';\n\nfunction useLocalStorage(key, initialValue) {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.log(error);\n            return initialValue;\n        }\n});\n    const setValue = (value) => {\n        try {\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return [storedValue, setValue];\n};\n\nconst Canvas = props => {\n   \n    let [color, setColor] = useState('black');\n    let [gallery, setImage] = useLocalStorage('gallery', []);\n    let [paths, setPath] = useState([]);\n    let [lineWidth, setLineWidth] = useState(2);\n    let [toggleItem, setToggle] = useState([]);\n    const [isLoaded, setLoader]=useState(false);\n    const canvasRef = useRef(null);\n    const draw = useCallback((canvas, color, mode) => {\n        let rememberPath = false;\n        let points = [];\n        let context = canvas.getContext('2d');\n        context.globalCompositeOperation = mode ==='line'? \"source-over\": \"destination-out\";\n        canvas.onmousemove = function drawIfPressed (e) {\n            let x = e.offsetX;\n            let y = e.offsetY;\n            let dx = e.movementX;\n            let dy = e.movementY;\n            context.lineCap = \"round\";\n            context.lineWidth = lineWidth;\n            if (e.buttons > 0) {\n              context.beginPath();\n              context.moveTo(x, y);\n              context.lineTo(x - dx, y - dy);\n              context.stroke();\n              context.strokeStyle = color;\n              context.closePath();\n            }\n            if(rememberPath){\n                points.push({x:x-dx, y:y-dy, color: color, lineWidth: lineWidth})\n            }\n            canvas.onmouseup = (e) => {//не нажата\n                setPath([...paths, points])\n                rememberPath = false;\n            };\n            canvas.onmousedown = (e)=>{//нажата\n                let x = e.offsetX;\n                let y = e.offsetY;\n                let dx = e.movementX;\n                let dy = e.movementY;\n                points = [];\n                rememberPath = true;\n                points.push({x:x-dx,y:y-dy})\n            };\n        }\n        }, [lineWidth, paths]); \n        \n    \n    const drawPaths = (canvas)=> {\n        let context = canvas.getContext('2d');\n        context.clearRect(0,0,canvas.width,canvas.height);\n        paths.forEach(path=>{\n        context.beginPath();\n        context.moveTo(path[0].x,path[0].y); \n        for(let i = 1; i < path.length; i++){\n            context.lineTo(path[i].x,path[i].y); \n            context.strokeStyle = path[i].color;\n            context.lineWidth = path[i].lineWidth;\n        }\n        context.stroke();\n        })\n    };\n\n    const onChangeLineWidth = width => setLineWidth(width); \n    const onChangeColor = color => setColor(color);\n    const save = () => {\n        const canvas = canvasRef.current;\n        let dataURL = canvas.toDataURL(\"image/png\", 1.0);\n        if(localStorage.getItem('gallery') === null || localStorage.getItem('gallery').includes(dataURL) !== true) {//картинку сохраняем один раз\n            setImage([...gallery,dataURL]);\n        }\n        \n    };\n    const clear = () => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        setPath([]);\n    };\n    const eraser = () => {\n        const canvas = canvasRef.current\n        draw(canvas,\"rgb(255, 255, 255, 1)\",'eraser');\n    };\n    const undo = () => {\n        const canvas = canvasRef.current;\n        paths.splice(-1,1);\n        drawPaths(canvas);\n    }\n    const toggleStyle =  (value) => {\n        //alert(JSON.stringify( props))\n        setToggle(value);\n        faceCanvas.updateTexture(value);\n        /*if(faceCanvas!==undefined){\n            faceCanvas.updateTexture(value);\n        }\n        else{\n            alert('loading')\n        }*/\n    };\n    if(faceCanvas !== undefined){\n        setLoader(true)\n    }\n    const addNewImg = (dataURL) => {\n       setImage([...gallery, dataURL]);\n\n    } \n    const onDelete= (item) => {\n        setImage(prevActions => (\n            prevActions.filter(value => value !== item)\n        ));\n    };\n      \n    useEffect(() => {\n        const canvas = canvasRef.current;\n        //alert(faceCanvas===undefined)\n        draw(canvas, color,'line');\n\n    }, [isLoaded, draw, color, gallery, paths, lineWidth, toggleStyle]);\n//, lineWidth, toggleStyle  \n  \n  return isLoaded? <section className={styles.paintWrapper}>\n        <div className={styles.galleryWrapper}>\n            <header className={styles.gallery__heading}>Gallery</header>\n            <div className={styles.gallery}>{\n                gallery.map((item, index)=> \n                <div className={styles.block} key={item}>\n                    <GalleryItem key={index}  src={item}  onClick={toggleStyle} active={(item) === toggleItem}/>\n                    <DeleteButton id={item} onClick={onDelete}/>\n                </div>)\n        }</div>\n        <LoadImage addNewImg={addNewImg}/>\n    </div>\n    <div className={styles.canvasWrapper}>\n        <header className={styles.canvas__heading}>Grafic Editor</header>\n        <div className={styles.graficEditor}>\n            <div className={styles.tools}>\n                    <LineWidthBar onChangeLineWidth={onChangeLineWidth} value={lineWidth}/> \n                    <Button onClick={eraser} id={'eraser'} text={'eraser'}/>\n                    <Button onClick={clear} id={'clear'} text={'clear'}/>\n                    <Button onClick={undo} id={'undo'} text={'undo'}/>\n                    <Button onClick={save} id={'save'} text={'save'}/>\n            </div>\n            <img src={face} alt='face' className={styles.facePattern}/>\n            <canvas width=\"450\" height=\"450\" className={styles.painter} ref={canvasRef} {...props}/>\n            <Palette onChangeColor={onChangeColor}></Palette>\n        </div>\n    </div>\n</section>: <section className={styles.paintWrapper}>\n        <div className={styles.galleryWrapper}>\n            Loading\n        <LoadImage addNewImg={addNewImg}/>\n    </div>\n    <div className={styles.canvasWrapper}>\n        <header className={styles.canvas__heading}>Grafic Editor</header>\n        <div className={styles.graficEditor}>\n            <div className={styles.tools}>\n                    <LineWidthBar onChangeLineWidth={onChangeLineWidth} value={lineWidth}/> \n                    <Button onClick={eraser} id={'eraser'} text={'eraser'}/>\n                    <Button onClick={clear} id={'clear'} text={'clear'}/>\n                    <Button onClick={undo} id={'undo'} text={'undo'}/>\n                    <Button onClick={save} id={'save'} text={'save'}/>\n            </div>\n            <img src={face} alt='face' className={styles.facePattern}/>\n            <canvas width=\"450\" height=\"450\" className={styles.painter} ref={canvasRef} {...props}/>\n            <Palette onChangeColor={onChangeColor}></Palette>\n        </div>\n    </div>\n</section>;\n}\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}