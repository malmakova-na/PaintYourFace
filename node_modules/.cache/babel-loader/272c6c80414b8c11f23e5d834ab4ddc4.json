{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/Paint/Paint.js\";\nimport React, { Fragment } from 'react';\nimport styles from './Paint.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generatePalette = () => {\n  // генерируем палитру\n  // в итоге 5^3 цветов = 125\n  let colors = [];\n\n  for (var r = 0, max = 4; r <= max; r++) {\n    for (var g = 0; g <= max; g++) {\n      for (var b = 0; b <= max; b++) {\n        colors.push('rgb(' + Math.round(r * 255 / max) + \", \" + Math.round(g * 255 / max) + \", \" + Math.round(b * 255 / max) + \")\"); // palette.appendChild(paletteBlock);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pallete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\nconst Paint = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: styles.canvas,\n      width: \"600\",\n      height: \"600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), generatePalette, /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"clear\",\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      children: \" \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Paint;\nexport default Paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paint\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/Paint/Paint.js"],"names":["React","Fragment","styles","generatePalette","colors","r","max","g","b","push","Math","round","pallete","Paint","canvas"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,eAAe,GAAG,MAAO;AAC3B;AACA;AACA,MAAIC,MAAM,GAAE,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,CAAtB,EAAyBD,CAAC,IAAIC,GAA9B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,GAArB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAArB,EAA0BE,CAAC,EAA3B,EAA+B;AAC7BJ,QAAAA,MAAM,CAACK,IAAP,CACE,SAASC,IAAI,CAACC,KAAL,CAAWN,CAAC,GAAG,GAAJ,GAAUC,GAArB,CAAT,GAAqC,IAArC,GACEI,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,GAAJ,GAAUD,GAArB,CADF,GAC8B,IAD9B,GAEEI,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,GAAJ,GAAUF,GAArB,CAFF,GAE8B,GAHhC,EAD6B,CAM9B;AACA;AACF;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACU;AAAvB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBH;;AAyBA,MAAMC,KAAK,GAAG,MAAM;AAShB,sBACI,QAAC,QAAD;AAAA,4BACI;AAAQ,MAAA,EAAE,EAAEX,MAAM,CAACY,MAAnB;AAA2B,MAAA,KAAK,EAAE,KAAlC;AAAwC,MAAA,MAAM,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKX,eAFL,eAGI;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBD;;KAAMU,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React, { Fragment } from 'react';\n\nimport styles from './Paint.module.css';\n\nconst generatePalette = ()  => {\n    // генерируем палитру\n    // в итоге 5^3 цветов = 125\n    let colors =[];\n    for (var r = 0, max = 4; r <= max; r++) {\n      for (var g = 0; g <= max; g++) {\n        for (var b = 0; b <= max; b++) {\n          colors.push(\n            'rgb(' + Math.round(r * 255 / max) + \", \"\n            + Math.round(g * 255 / max) + \", \"\n            + Math.round(b * 255 / max) + \")\"\n          );\n         // palette.appendChild(paletteBlock);\n        }\n      }\n    }\n    return (\n      <div className={styles.pallete}>\n        {\n          \n        }\n      </div>\n    )\n  }\n\nconst Paint = () => {\n\n    \n    \n    \n    \n    \n    \n    \n    return(\n        <Fragment>\n            <canvas id={styles.canvas} width =\"600\" height=\"600\"/>\n            {generatePalette}\n            <button id=\"clear\">Очистить изображение</button>\n            <button id=\"save\" > Сохранить</button> \n        </Fragment>\n    )\n};\nexport default Paint;"]},"metadata":{},"sourceType":"module"}