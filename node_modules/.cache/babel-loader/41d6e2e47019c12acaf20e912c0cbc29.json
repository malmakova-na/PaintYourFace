{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/DrawToolBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Palette from '../components/Palette/Palette';\nimport getContext from '../components/canvas/Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawToolBar = props => {\n  _s();\n\n  let [color, setColor] = useState('black');\n\n  const onChangeColor = color => {\n    setColor(color);\n    let context = getContext();\n    context.strokeStyle = 'rgb(128, 191, 191)';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Palette, {\n    onChangeColor: onChangeColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DrawToolBar, \"RoWe3aw2SfO+wcs7VUr2ptZGRnk=\");\n\n_c = DrawToolBar;\nexport default DrawToolBar; // onChangeColor ={onChangeColor}\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawToolBar\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/DrawToolBar.js"],"names":["React","useState","Palette","getContext","DrawToolBar","props","color","setColor","onChangeColor","context","strokeStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AACzB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAhC;;AAEA,QAAMO,aAAa,GAAGF,KAAK,IAAI;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,QAAIG,OAAO,GAAGN,UAAU,EAAxB;AACAM,IAAAA,OAAO,CAACC,WAAR,GAAsB,oBAAtB;AAEH,GALD;;AAMA,sBACI,QAAC,OAAD;AAAS,IAAA,aAAa,EAAGF;AAAzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAZD;;GAAMJ,W;;KAAAA,W;AAaN,eAAeA,WAAf,C,CACA","sourcesContent":["import React, { useState } from 'react';\nimport Palette from '../components/Palette/Palette';\nimport getContext from '../components/canvas/Canvas'\n\nconst DrawToolBar = props => {\n    let [color, setColor] = useState('black');\n    \n    const onChangeColor = color => {\n        setColor(color);\n        let context = getContext();\n        context.strokeStyle = 'rgb(128, 191, 191)';\n\n    };\n    return(\n        <Palette onChangeColor ={onChangeColor}/>\n    );\n};\nexport default DrawToolBar;\n// onChangeColor ={onChangeColor}"]},"metadata":{},"sourceType":"module"}