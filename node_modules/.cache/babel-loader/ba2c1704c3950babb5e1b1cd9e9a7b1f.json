{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/Paint/DrawGraficEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Stage, Layer, Line } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GraficEditor = props => {\n  _s();\n\n  let stage = null;\n  const [color, setColor] = setState('black');\n  const [currentLine, setCurrentLine] = useState(null);\n  const [lines, setLines] = useState([]); //записываем первую точку\n\n  const onMouseDown = () => {\n    const {\n      x,\n      y\n    } = getScaledPoint(stage, 1);\n    setCurrentLine({\n      points: [x, y]\n    });\n  }; //проверка мы рисуем?\n\n\n  const onMouseMove = () => {\n    if (currentLine) {\n      const {\n        x,\n        y\n      } = getScaledPoint(stage, 1);\n      setCurrentLine({ ...currentLine,\n        points: [...currentLine.points, x, y]\n      });\n    }\n  }; //записываем последнюю точку и сохраняем линию\n\n\n  const onMouseUp = () => {\n    const {\n      x,\n      y\n    } = getScaledPoint(stage, 1);\n    setCurrentLine(null);\n    setLines([...lines, { ...currentLine,\n      points: [...currentLine.points, x, y]\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    className: \"konva-container\",\n    width: props.width,\n    height: props.height,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        x: 10,\n        y: 10,\n        text: \"Text\",\n        fill: \"#000\",\n        stroke: \"#000\",\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GraficEditor, \"VjTPEvmo0QA52xSQzKbpCkzcj6U=\");\n\n_c = GraficEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraficEditor\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/Paint/DrawGraficEditor.js"],"names":["React","useState","PropTypes","Stage","Layer","Line","GraficEditor","props","stage","color","setColor","setState","currentLine","setCurrentLine","lines","setLines","onMouseDown","x","y","getScaledPoint","points","onMouseMove","onMouseUp","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAmC,aAAnC;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,MAAIC,KAAK,GAAG,IAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAJ0B,CAM1B;;AACA,QAAMe,WAAW,GAAG,MAAM;AACtB,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWC,cAAc,CAACX,KAAD,EAAQ,CAAR,CAA/B;AACAK,IAAAA,cAAc,CAAC;AAAEO,MAAAA,MAAM,EAAE,CAACH,CAAD,EAAIC,CAAJ;AAAV,KAAD,CAAd;AACH,GAHD,CAP0B,CAW1B;;;AACA,QAAMG,WAAW,GAAG,MAAM;AAC1B,QAAIT,WAAJ,EAAiB;AACb,YAAM;AAAEK,QAAAA,CAAF;AAAKC,QAAAA;AAAL,UAAWC,cAAc,CAACX,KAAD,EAAQ,CAAR,CAA/B;AACAK,MAAAA,cAAc,CAAC,EACf,GAAGD,WADY;AAEfQ,QAAAA,MAAM,EAAE,CAAC,GAAGR,WAAW,CAACQ,MAAhB,EAAwBH,CAAxB,EAA2BC,CAA3B;AAFO,OAAD,CAAd;AAIH;AACA,GARD,CAZ0B,CAqB1B;;;AACA,QAAMI,SAAS,GAAG,MAAM;AACxB,UAAM;AAAEL,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWC,cAAc,CAACX,KAAD,EAAQ,CAAR,CAA/B;AACAK,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,QAAQ,CAAC,CACL,GAAGD,KADE,EAEL,EAAE,GAAGF,WAAL;AAAkBQ,MAAAA,MAAM,EAAE,CAAC,GAAGR,WAAW,CAACQ,MAAhB,EAAwBH,CAAxB,EAA2BC,CAA3B;AAA1B,KAFK,CAAD,CAAR;AAIC,GAPD;;AASA,sBACI,QAAC,KAAD;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,KAAK,EAAEX,KAAK,CAACgB,KAFb;AAGA,IAAA,MAAM,EAAEhB,KAAK,CAACiB,MAHd;AAAA,2BAIA,QAAC,KAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,CAAC,EAAE,EADL;AAEE,QAAA,CAAC,EAAE,EAFL;AAGE,QAAA,IAAI,EAAE,MAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,MAAM,EAAC,MALT;AAME,QAAA,WAAW,EAAE;AANf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhDD;;GAAMlB,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Stage, Layer, Line } from \"react-konva\";\n\nconst GraficEditor = props => {\n    let stage = null;\n    const [color, setColor] = setState('black');\n    const [currentLine, setCurrentLine] = useState(null);\n    const [lines, setLines] = useState([]);\n\n    //записываем первую точку\n    const onMouseDown = () => {\n        const { x, y } = getScaledPoint(stage, 1);\n        setCurrentLine({ points: [x, y] });\n    };\n    //проверка мы рисуем?\n    const onMouseMove = () => {\n    if (currentLine) {\n        const { x, y } = getScaledPoint(stage, 1);\n        setCurrentLine({\n        ...currentLine,\n        points: [...currentLine.points, x, y]\n        });\n    }\n    };\n    //записываем последнюю точку и сохраняем линию\n    const onMouseUp = () => {\n    const { x, y } = getScaledPoint(stage, 1);\n    setCurrentLine(null);\n    setLines([\n        ...lines,\n        { ...currentLine, points: [...currentLine.points, x, y] }\n    ]);\n    };\n\n    return (\n        <Stage\n        className=\"konva-container\"\n        width={props.width}\n        height={props.height}>\n        <Layer>\n          <Text\n            x={10}\n            y={10}\n            text={\"Text\"}\n            fill=\"#000\"\n            stroke=\"#000\"\n            strokeWidth={1}\n          />\n        </Layer>\n      </Stage>\n    );\n}"]},"metadata":{},"sourceType":"module"}