{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Line = void 0;\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Validators_1 = require(\"../Validators\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Line = function (_super) {\n  __extends(Line, _super);\n\n  function Line(config) {\n    var _this = _super.call(this, config) || this;\n\n    _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n      this._clearCache('tensionPoints');\n    });\n\n    return _this;\n  }\n\n  Line.prototype._sceneFunc = function (context) {\n    var points = this.points(),\n        length = points.length,\n        tension = this.tension(),\n        closed = this.closed(),\n        bezier = this.bezier(),\n        tp,\n        len,\n        n;\n\n    if (!length) {\n      return;\n    }\n\n    context.beginPath();\n    context.moveTo(points[0], points[1]);\n\n    if (tension !== 0 && length > 4) {\n      tp = this.getTensionPoints();\n      len = tp.length;\n      n = closed ? 0 : 4;\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n      }\n\n      while (n < len - 2) {\n        context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n      }\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n      }\n    } else if (bezier) {\n      n = 2;\n\n      while (n < length) {\n        context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n      }\n    } else {\n      for (n = 2; n < length; n += 2) {\n        context.lineTo(points[n], points[n + 1]);\n      }\n    }\n\n    if (closed) {\n      context.closePath();\n      context.fillStrokeShape(this);\n    } else {\n      context.strokeShape(this);\n    }\n  };\n\n  Line.prototype.getTensionPoints = function () {\n    return this._getCache('tensionPoints', this._getTensionPoints);\n  };\n\n  Line.prototype._getTensionPoints = function () {\n    if (this.closed()) {\n      return this._getTensionPointsClosed();\n    } else {\n      return Util_1.Util._expandPoints(this.points(), this.tension());\n    }\n  };\n\n  Line.prototype._getTensionPointsClosed = function () {\n    var p = this.points(),\n        len = p.length,\n        tension = this.tension(),\n        firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension),\n        lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension),\n        middle = Util_1.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]].concat(middle).concat([lastControlPoints[0], lastControlPoints[1], p[len - 2], p[len - 1], lastControlPoints[2], lastControlPoints[3], firstControlPoints[0], firstControlPoints[1], p[0], p[1]]);\n\n    return tp;\n  };\n\n  Line.prototype.getWidth = function () {\n    return this.getSelfRect().width;\n  };\n\n  Line.prototype.getHeight = function () {\n    return this.getSelfRect().height;\n  };\n\n  Line.prototype.getSelfRect = function () {\n    var points = this.points();\n\n    if (points.length < 4) {\n      return {\n        x: points[0] || 0,\n        y: points[1] || 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (this.tension() !== 0) {\n      points = __spreadArrays([points[0], points[1]], this._getTensionPoints(), [points[points.length - 2], points[points.length - 1]]);\n    } else {\n      points = this.points();\n    }\n\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      minX = Math.min(minX, x);\n      maxX = Math.max(maxX, x);\n      minY = Math.min(minY, y);\n      maxY = Math.max(maxY, y);\n    }\n\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n\n  return Line;\n}(Shape_1.Shape);\n\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n\nGlobal_1._registerNode(Line);\n\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\nUtil_1.Collection.mapMethods(Line);","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/node_modules/konva/lib/shapes/Line.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","defineProperty","exports","value","Line","Util_1","require","Factory_1","Shape_1","Validators_1","Global_1","_super","config","_this","on","_clearCache","_sceneFunc","context","points","tension","closed","bezier","tp","len","n","beginPath","moveTo","getTensionPoints","quadraticCurveTo","bezierCurveTo","lineTo","closePath","fillStrokeShape","strokeShape","_getCache","_getTensionPoints","_getTensionPointsClosed","Util","_expandPoints","firstControlPoints","_getControlPoints","lastControlPoints","middle","concat","getWidth","getSelfRect","width","getHeight","height","x","y","minX","maxX","minY","maxY","Math","min","max","Shape","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","getNumberValidator","getNumberArrayValidator","Collection","mapMethods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Line = void 0;\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_1 = require(\"../Global\");\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    function Line(config) {\n        var _this = _super.call(this, config) || this;\n        _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n        return _this;\n    }\n    Line.prototype._sceneFunc = function (context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    };\n    Line.prototype.getTensionPoints = function () {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    };\n    Line.prototype._getTensionPoints = function () {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return Util_1.Util._expandPoints(this.points(), this.tension());\n        }\n    };\n    Line.prototype._getTensionPointsClosed = function () {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = Util_1.Util._expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n        ]);\n        return tp;\n    };\n    Line.prototype.getWidth = function () {\n        return this.getSelfRect().width;\n    };\n    Line.prototype.getHeight = function () {\n        return this.getSelfRect().height;\n    };\n    Line.prototype.getSelfRect = function () {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0\n            };\n        }\n        if (this.tension() !== 0) {\n            points = __spreadArrays([\n                points[0],\n                points[1]\n            ], this._getTensionPoints(), [\n                points[points.length - 2],\n                points[points.length - 1]\n            ]);\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    };\n    return Line;\n}(Shape_1.Shape));\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\nGlobal_1._registerNode(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\nUtil_1.Collection.mapMethods(Line);\n"]},"metadata":{},"sourceType":"script"}