{"ast":null,"code":"var _jsxFileName = \"/home/namina/courses/tinkoff/paint-your-face/src/components/FaceMash/camera.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport React, { useRef, useState } from 'react';\nimport styles from './Camera.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Camera = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  let model, w, h;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    async function fetchCam() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      video.srcObject = stream;\n      await new Promise(function (res) {\n        video.onloadedmetadata = function () {\n          //w = video.videoWidth;\n          //h = video.videoHeight;\n          res();\n        };\n      });\n      const script = document.createElement('script');\n      script.src = \"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\";\n      script.async = true;\n      /*\n       <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\"></script>\n      <!-- <script src=\"lib/tf-js-core.js\"></script> -->\n      <!-- <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter\"></script> -->\n      <!-- <script src=\"lib/tf-js-converter.js\"></script> -->\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/facemesh\"></script>\n      <!-- <script src=\"lib/tf-js-facemesh.js\"></script> -->\n      <script src=\"https://cdn.jsdelivr.net/npm/three@0.116.1/build/three.min.js\"></script>\n       */\n      //video.height = h;\n      //video.width = w;\n    }\n\n    fetchCam();\n    video.play();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.camera,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      muted: true,\n      playsInline: true,\n      className: styles.webcam,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: styles.faceCanvas,\n      tabIndex: \"1\",\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Camera, \"yDZRt0qVdA+8KL1NIY7I2UpyRts=\");\n\n_c = Camera;\nexport default Camera; //<div className={styles.background}/>\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/home/namina/courses/tinkoff/paint-your-face/src/components/FaceMash/camera.js"],"names":["useEffect","React","useRef","useState","styles","Camera","props","canvasRef","videoRef","model","w","h","canvas","current","video","fetchCam","stream","navigator","mediaDevices","getUserMedia","audio","srcObject","Promise","res","onloadedmetadata","script","document","createElement","src","async","play","camera","webcam","faceCanvas"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMM,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIO,KAAJ,EAAWC,CAAX,EAAcC,CAAd;AAIAX,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMY,MAAM,GAAGL,SAAS,CAACM,OAAzB;AACA,UAAMC,KAAK,GAAGN,QAAQ,CAACK,OAAvB;;AACA,mBAAeE,QAAf,GAA2B;AACvB,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACjEL,QAAAA,KAAK,EAAE,IAD0D;AAEjEM,QAAAA,KAAK,EAAE;AAF0D,OAApC,CAArB;AAIAN,MAAAA,KAAK,CAACO,SAAN,GAAkBL,MAAlB;AACA,YAAM,IAAIM,OAAJ,CAAY,UAAUC,GAAV,EAAe;AACzCT,QAAAA,KAAK,CAACU,gBAAN,GAAyB,YAAY;AACpC;AACA;AACAD,UAAAA,GAAG;AACH,SAJD;AAKA,OANc,CAAN;AAOA,YAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAW,+CAAX;AACAH,MAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG;AACA;AACM;;AACDd,IAAAA,QAAQ;AACRD,IAAAA,KAAK,CAACgB,IAAN;AAGH,GArCQ,EAqCN,EArCM,CAAT;AAsCA,sBAAO;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC2B,MAAvB;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAO,MAAA,GAAG,EAAEvB,QAAZ;AAAsB,MAAA,KAAK,EAAE,IAA7B;AAAmC,MAAA,WAAW,EAAE,IAAhD;AAAuD,MAAA,SAAS,EAAEJ,MAAM,CAAC4B,MAAzE;AAAiF,MAAA,QAAQ,EAAE;AAA3F;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,UAA1B;AAAsC,MAAA,QAAQ,EAAC,GAA/C;AAAoD,MAAA,GAAG,EAAE1B,SAAzD;AAAA,SAAwED;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAlDD;;GAAMD,M;;KAAAA,M;AAmDN,eAAeA,MAAf,C,CACA","sourcesContent":["import { useEffect } from \"react\";\nimport React, { useRef, useState } from 'react';\n\n\nimport styles from './Camera.module.css';\n\n\nconst Camera = props => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    let model, w, h;\n    \n    \n\n    useEffect(()=>{\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n        async function fetchCam () {\n            const stream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\tvideo: true,\n\t\t\t\taudio: false\n\t\t\t});\n            video.srcObject = stream;\n            await new Promise(function (res) {\n\t\t\t\tvideo.onloadedmetadata = function () {\n\t\t\t\t\t//w = video.videoWidth;\n\t\t\t\t\t//h = video.videoHeight;\n\t\t\t\t\tres();\n\t\t\t\t}\n\t\t\t});\n            const script = document.createElement('script');\n            script.src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\";\n            script.async = true;\n            /*\n             <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\"></script>\n\t<!-- <script src=\"lib/tf-js-core.js\"></script> -->\n\t<!-- <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter\"></script> -->\n\t<!-- <script src=\"lib/tf-js-converter.js\"></script> -->\n\t<script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/facemesh\"></script>\n\t<!-- <script src=\"lib/tf-js-facemesh.js\"></script> -->\n\t<script src=\"https://cdn.jsdelivr.net/npm/three@0.116.1/build/three.min.js\"></script>\n             */\n            \n\n\t\t\t//video.height = h;\n\t\t\t//video.width = w;\n        }\n        fetchCam()\n        video.play();\n        \n\n    }, []);\n    return <div className={styles.camera}>\n        <div>Camera</div>\n        <video ref={videoRef} muted={true} playsInline={true}  className={styles.webcam} autoPlay={true} ></video>\n        <canvas className={styles.faceCanvas} tabIndex=\"1\"  ref={canvasRef} {...props}></canvas>\n    </div>;\n};\nexport default Camera;\n//<div className={styles.background}/>"]},"metadata":{},"sourceType":"module"}